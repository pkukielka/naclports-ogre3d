// Copyright 2010 The Native Client SDK Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can
// be found in the LICENSE file.
#ifndef EXAMPLES_SCRIPTABLE_CRYPTO_AES_CODEC_H_
#define EXAMPLES_SCRIPTABLE_CRYPTO_AES_CODEC_H_
#include <stdint.h>

// AES codec is using Advanced Encryption Standard algorithm with 256 bit key
// in EAX mode to encrypt data, decrypt and authenticate. Session key and
// initialization vector are generated by using PKCS #5 alg2 (using SHA256 hash,
// 16 bytes random salt and iteration counter = 1000).
// Implementation is based on the TomCrypt library.
class AESCodec {
 public:
  // The Encode function returns a pointer to a encoded text, or NULL if
  // insufficient memory was available. Memory for the encoded text is
  // obtained with malloc(), and shall be freed with free().
  static void* Encode(const void* plain_text,
                      int plain_text_sz,
                      const char* password,
                      int* encoded_text_sz);

  // The Decode function returns a pointer to a decoded text; NULL if
  // insufficient memory was available, or decryption was unsuccessful,
  // or authentication failed. Memory for the decoded text is
  // obtained with malloc(), and shall be freed with free().
  static void* Decode(const void* encoded_text,
                      int encoded_text_sz,
                      const char* password,
                      int* plain_text_sz);

  static bool SelfTest();
};

#endif  // EXAMPLES_SCRIPTABLE_CRYPTO_AES_CODEC_H_

