diff -Naur scummvm-1.2.1_orig/backends/midi/timidity.cpp scummvm-1.2.1/backends/midi/timidity.cpp
--- scummvm-1.2.1_orig/backends/midi/timidity.cpp	2010-12-11 01:38:09.000000000 -0800
+++ scummvm-1.2.1/backends/midi/timidity.cpp	2011-09-07 11:47:02.000000000 -0700
@@ -34,8 +34,7 @@
  *
  */
 
-#if defined (UNIX)
-
+#if defined (UNIX) && !defined(NACL)
 #include "common/util.h"
 #include "common/endian.h"
 #include "common/str.h"
diff -Naur scummvm-1.2.1_orig/backends/platform/sdl/main.cpp scummvm-1.2.1/backends/platform/sdl/main.cpp
--- scummvm-1.2.1_orig/backends/platform/sdl/main.cpp	2010-12-11 01:38:11.000000000 -0800
+++ scummvm-1.2.1/backends/platform/sdl/main.cpp	2011-09-07 11:47:02.000000000 -0700
@@ -52,16 +52,18 @@
 }
 #endif
 
-int main(int argc, char *argv[]) {
-
+#if defined(NACL)
+extern "C" int scummvm_sdl_init(void) {
 	// Create our OSystem instance
 	g_system = new OSystem_SDL();
 	assert(g_system);
+}
+#endif
 
+extern "C" int scummvm_sdl_main(int argc, const char * const argv[]) {
 #ifdef DYNAMIC_MODULES
 	PluginManager::instance().addPluginProvider(new SDLPluginProvider());
 #endif
-
 	// Invoke the actual ScummVM main entry point:
 	int res = scummvm_main(argc, argv);
 	((OSystem_SDL *)g_system)->deinit();
diff -Naur scummvm-1.2.1_orig/backends/platform/sdl/module.mk scummvm-1.2.1/backends/platform/sdl/module.mk
--- scummvm-1.2.1_orig/backends/platform/sdl/module.mk	2010-12-11 01:38:11.000000000 -0800
+++ scummvm-1.2.1/backends/platform/sdl/module.mk	2011-09-07 11:47:02.000000000 -0700
@@ -5,6 +5,8 @@
 	graphics.o \
 	hardwarekeys.o \
 	main.o \
+	ppapi/scummvm_pepper_instance.o \
+	ppapi/scummvm_pepper_module.o \
 	sdl.o
 
 # We don't use rules.mk but rather manually update OBJS and MODULE_DIRS.
diff -Naur scummvm-1.2.1_orig/backends/platform/sdl/ppapi/module.mk scummvm-1.2.1/backends/platform/sdl/ppapi/module.mk
--- scummvm-1.2.1_orig/backends/platform/sdl/ppapi/module.mk	1969-12-31 16:00:00.000000000 -0800
+++ scummvm-1.2.1/backends/platform/sdl/ppapi/module.mk	2011-09-07 11:47:02.000000000 -0700
@@ -0,0 +1,8 @@
+MODULE := scummvm_ppapi
+
+MODULE_OBJS := \
+	scummvm_pepper_instance.o \
+	scummvm_pepper_module.o
+
+# Include common rules
+include $(srcdir)/rules.mk
diff -Naur scummvm-1.2.1_orig/backends/platform/sdl/ppapi/scummvm_pepper_instance.cpp scummvm-1.2.1/backends/platform/sdl/ppapi/scummvm_pepper_instance.cpp
--- scummvm-1.2.1_orig/backends/platform/sdl/ppapi/scummvm_pepper_instance.cpp	1969-12-31 16:00:00.000000000 -0800
+++ scummvm-1.2.1/backends/platform/sdl/ppapi/scummvm_pepper_instance.cpp	2011-09-07 11:47:02.000000000 -0700
@@ -0,0 +1,115 @@
+/*
+ * Copyright (c) 2011 The Native Client Authors. All rights reserved.
+ * Use of this source code is governed by a BSD-style license that can be
+ * found in the LICENSE file.
+ */
+#include "scummvm_pepper_instance.h"
+#include <assert.h>
+#include <vector>
+#include <SDL.h>
+#include <SDL_nacl.h>
+#include <SDL_video.h>
+#include "nacl-mounts/base/UrlLoaderJob.h"
+#include "nacl-mounts/AppEngine/AppEngineMount.h"
+
+extern "C" int mount(const char *source, const char *target, const char *filesystemtype, unsigned long mountflags, const void *data);
+extern "C" int scummvm_sdl_init(void);
+extern "C" int scummvm_sdl_main(int argc,const char * const argv[]);
+extern "C" int simple_tar_extract(const char *path);
+
+static void *scummvm_init(void *arg) {
+  MainThreadRunner *runner = reinterpret_cast<MainThreadRunner*>(arg);
+
+  UrlLoaderJob *job = new UrlLoaderJob;
+  job->set_url("/static/runimage.tar");
+  std::vector<char> data;
+  job->set_dst(&data);
+  runner->RunJob(job);
+  int fh = open("/runimage.tar", O_CREAT | O_WRONLY);
+  write(fh, &data[0], data.size());
+  close(fh);
+
+  simple_tar_extract("runimage.tar");
+
+  UrlLoaderJob *job2 = new UrlLoaderJob;
+  job2->set_url("/static/bass.tar");
+  std::vector<char> data2;
+  job2->set_dst(&data2);
+  runner->RunJob(job2);
+  int fh2 = open("/bass.tar", O_CREAT | O_WRONLY);
+  write(fh2, &data2[0], data2.size());
+  close(fh2);
+
+  simple_tar_extract("bass.tar");
+
+  UrlLoaderJob *job3 = new UrlLoaderJob;
+  job3->set_url("/static/lure.tar");
+  std::vector<char> data3;
+  job3->set_dst(&data3);
+  runner->RunJob(job3);
+  int fh3 = open("/lure.tar", O_CREAT | O_WRONLY);
+  write(fh3, &data3[0], data3.size());
+  close(fh3);
+
+  simple_tar_extract("lure.tar");
+
+  int ret;
+  mkdir("/usr", 0777);
+  mkdir("/usr/local", 0777);
+  mkdir("/usr/local/save", 0777);
+  mkdir("/usr/local/save/AppEngine", 0777);
+
+  AppEngineMount *aem = new AppEngineMount(runner, "/_file");
+  ret = mount(0, "/usr/local/save/AppEngine", 0, 0, aem);
+  assert(ret == 0);
+
+  ret = chdir("/usr/local/save/AppEngine");
+  assert(ret == 0);
+
+  static char const * argv[] = {"scummvm", NULL};
+  scummvm_sdl_init();
+  scummvm_sdl_main(1, (const char**)argv);
+
+  return 0;
+}
+
+ScummvmPepperInstance::ScummvmPepperInstance(PP_Instance instance)
+  : pp::Instance(instance),
+    quit_(false),
+    width_(0),
+    height_(0),
+    runner_(NULL) {
+  RequestInputEvents(PP_INPUTEVENT_CLASS_MOUSE);
+  RequestFilteringInputEvents(PP_INPUTEVENT_CLASS_KEYBOARD);
+}
+
+bool ScummvmPepperInstance::Init(uint32_t argc, const char* argn[], const char* argv[]) {
+  return true;
+}
+
+void ScummvmPepperInstance::DidChangeView(const pp::Rect& position, const pp::Rect& clip) {
+  if (width_ && height_)
+    return;
+
+  if (position.size().width() == width_ &&
+      position.size().height() == height_)
+    return;  // Size didn't change, no need to update anything.
+
+  width_ = position.size().width();
+  height_ = position.size().height();
+
+  SDL_NACL_SetInstance(pp_instance(), width_, height_);
+
+  int lval = SDL_Init(SDL_INIT_VIDEO | SDL_INIT_AUDIO);
+
+  assert(lval >= 0);
+
+  runner_ = new MainThreadRunner(this);
+  pthread_create(&scummvm_thread_, NULL, scummvm_init, runner_);
+}
+
+bool ScummvmPepperInstance::HandleInputEvent(const pp::InputEvent& event) {
+  SDL_NACL_PushEvent(event);
+  return true;
+}
+
diff -Naur scummvm-1.2.1_orig/backends/platform/sdl/ppapi/scummvm_pepper_instance.h scummvm-1.2.1/backends/platform/sdl/ppapi/scummvm_pepper_instance.h
--- scummvm-1.2.1_orig/backends/platform/sdl/ppapi/scummvm_pepper_instance.h	1969-12-31 16:00:00.000000000 -0800
+++ scummvm-1.2.1/backends/platform/sdl/ppapi/scummvm_pepper_instance.h	2011-09-07 11:47:02.000000000 -0700
@@ -0,0 +1,39 @@
+/*
+ * Copyright (c) 2011 The Native Client Authors. All rights reserved.
+ * Use of this source code is governed by a BSD-style license that can be
+ * found in the LICENSE file.
+ */
+#ifndef EXAMPLES_SCUMMVM_PEPPER_H_
+#define EXAMPLES_SCUMMVM_PEPPER_H_
+
+#include <pthread.h>
+#include <ppapi/cpp/input_event.h>
+#include <ppapi/cpp/instance.h>
+#include <ppapi/cpp/rect.h>
+#include "nacl-mounts/base/MainThreadRunner.h"
+
+class ScummvmPepperInstance : public pp::Instance {
+ public:
+  explicit ScummvmPepperInstance(PP_Instance instance);
+
+  virtual ~ScummvmPepperInstance() {
+    if (runner_) delete runner_;
+  }
+
+  virtual bool Init(uint32_t argc, const char* argn[], const char* argv[]);
+
+  void DidChangeView(const pp::Rect& position, const pp::Rect& clip);
+
+  bool HandleInputEvent(const pp::InputEvent& event);
+
+  bool quit() const { return quit_; }
+
+ private:
+  pthread_t scummvm_thread_;
+  MainThreadRunner *runner_;
+  int width_;
+  int height_;
+  bool quit_;
+};
+
+#endif  // EXAMPLES_SCUMMVM_PEPPER_H_
diff -Naur scummvm-1.2.1_orig/backends/platform/sdl/ppapi/scummvm_pepper_module.cpp scummvm-1.2.1/backends/platform/sdl/ppapi/scummvm_pepper_module.cpp
--- scummvm-1.2.1_orig/backends/platform/sdl/ppapi/scummvm_pepper_module.cpp	1969-12-31 16:00:00.000000000 -0800
+++ scummvm-1.2.1/backends/platform/sdl/ppapi/scummvm_pepper_module.cpp	2011-09-07 11:47:02.000000000 -0700
@@ -0,0 +1,33 @@
+// Copyright 2011 The Native Client SDK Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can
+// be found in the LICENSE file.
+
+#include <ppapi/cpp/module.h>
+#include <stdio.h>
+#include "scummvm_pepper_instance.h"
+
+namespace scummvm_pepper {
+  // The Module class.  The browser calls the CreateInstance() method to create
+  // an instance of you NaCl module on the web page.  The browser creates a new
+  // instance for each <embed> tag with type="application/x-ppapi-nacl-srpc".
+  class ScummvmPepperModule : public pp::Module {
+  public:
+    ScummvmPepperModule() : pp::Module() {}
+    virtual ~ScummvmPepperModule() {}
+
+    virtual pp::Instance* CreateInstance(PP_Instance instance) {
+      return new ScummvmPepperInstance(instance);
+    }
+  };
+}  // namespace scummvm_pepper
+
+// Factory function called by the browser when the module is first loaded.
+// The browser keeps a singleton of this module.  It calls the
+// CreateInstance() method on the object you return to make instances.  There
+// is one instance per <embed> tag on the page.  This is the main binding
+// point for your NaCl module with the browser.
+namespace pp {
+  Module* CreateModule() {
+    return new scummvm_pepper::ScummvmPepperModule();
+  }
+}  // namespace pp
diff -Naur scummvm-1.2.1_orig/backends/platform/sdl/sdl.cpp scummvm-1.2.1/backends/platform/sdl/sdl.cpp
--- scummvm-1.2.1_orig/backends/platform/sdl/sdl.cpp	2010-12-11 01:38:11.000000000 -0800
+++ scummvm-1.2.1/backends/platform/sdl/sdl.cpp	2011-09-07 11:47:02.000000000 -0700
@@ -97,6 +97,8 @@
 
 #if !defined(_WIN32_WCE) && !defined(__SYMBIAN32__) && defined(USE_SCALERS)
 static AspectRatio getDesiredAspectRatio() {
+  return AspectRatio(1, 1);
+#if !defined(NACL)
 	const size_t AR_COUNT = 4;
 	const char*       desiredAspectRatioAsStrings[AR_COUNT] = {            "auto",            "4/3",            "16/9",            "16/10" };
 	const AspectRatio desiredAspectRatios[AR_COUNT]         = { AspectRatio(0, 0), AspectRatio(4,3), AspectRatio(16,9), AspectRatio(16,10) };
@@ -113,6 +115,7 @@
 	}
 	// TODO : Report a warning
 	return AspectRatio(0, 0);
+#endif
 }
 #endif
 
@@ -135,9 +138,11 @@
 	if (joystick_num > -1)
 		sdlFlags |= SDL_INIT_JOYSTICK;
 
+#if !defined(NACL)
 	if (SDL_Init(sdlFlags) == -1) {
 		error("Could not initialize SDL: %s", SDL_GetError());
 	}
+#endif
 
 	_graphicsMutex = createMutex();
 
@@ -407,7 +412,8 @@
 	// from the Springboard, is /. Which we don't want.
 	const char *home = getenv("HOME");
 	if (home != NULL && strlen(home) < MAXPATHLEN)
-		snprintf(configFile, MAXPATHLEN, "%s/%s", home, DEFAULT_CONFIG_FILE);
+		//snprintf(configFile, MAXPATHLEN, "%s/%s", home, DEFAULT_CONFIG_FILE);
+		sprintf(configFile, "%s/%s", home, DEFAULT_CONFIG_FILE);
 	else
 		strcpy(configFile, DEFAULT_CONFIG_FILE);
 #else
diff -Naur scummvm-1.2.1_orig/base/commandLine.cpp scummvm-1.2.1/base/commandLine.cpp
--- scummvm-1.2.1_orig/base/commandLine.cpp	2010-12-11 01:38:08.000000000 -0800
+++ scummvm-1.2.1/base/commandLine.cpp	2011-09-07 11:47:02.000000000 -0700
@@ -140,7 +140,8 @@
 	va_list va;
 
 	va_start(va, s);
-	vsnprintf(buf, STRINGBUFLEN, s, va);
+	//vsnprintf(buf, STRINGBUFLEN, s, va);
+	vsprintf(buf, s, va);
 	va_end(va);
 
 #if !(defined(__GP32__) || defined (__SYMBIAN32__) || defined(__DS__))
diff -Naur scummvm-1.2.1_orig/base/plugins.cpp scummvm-1.2.1/base/plugins.cpp
--- scummvm-1.2.1_orig/base/plugins.cpp	2010-12-11 01:38:08.000000000 -0800
+++ scummvm-1.2.1/base/plugins.cpp	2011-09-07 11:47:02.000000000 -0700
@@ -212,7 +212,7 @@
 		LINK_PLUGIN(AMIGA)
 		LINK_PLUGIN(APPLEIIGS)
 		LINK_PLUGIN(TOWNS)
-		#if defined (UNIX)
+                #if defined (UNIX) && !defined(NACL)
 		LINK_PLUGIN(TIMIDITY)
 		#endif
 
diff -Naur scummvm-1.2.1_orig/config.log scummvm-1.2.1/config.log
--- scummvm-1.2.1_orig/config.log	1969-12-31 16:00:00.000000000 -0800
+++ scummvm-1.2.1/config.log	2011-09-07 11:47:02.000000000 -0700
@@ -0,0 +1 @@
+Configure run on Thu Aug 18 14:57:56 PDT 2011
diff -Naur scummvm-1.2.1_orig/configure scummvm-1.2.1/configure
--- scummvm-1.2.1_orig/configure	2010-12-11 01:38:39.000000000 -0800
+++ scummvm-1.2.1/configure	2011-09-07 11:47:02.000000000 -0700
@@ -1091,6 +1091,11 @@
 	_host_cpu=arm
 	_host_alias=arm-wince-mingw32ce
 	;;
+nacl)
+	_host_os=nacl
+	_host_cpu=x86
+	_host_alias=${NACL_CROSS_PREFIX}
+	;;
 *)
 	if test -n "$_host"; then
 		guessed_host=`$_srcdir/config.sub $_host`
diff -Naur scummvm-1.2.1_orig/engines/scumm/detection.cpp scummvm-1.2.1/engines/scumm/detection.cpp
--- scummvm-1.2.1_orig/engines/scumm/detection.cpp	2010-12-11 01:37:23.000000000 -0800
+++ scummvm-1.2.1/engines/scumm/detection.cpp	2011-09-07 11:47:02.000000000 -0700
@@ -23,6 +23,11 @@
  *
  */
 
+
+#define snprintf4(a,b,c,d) sprintf(a,c,d)
+#define snprintf5(a,b,c,d,e) sprintf(a,c,d,e)
+#define snprintf6(a,b,c,d,e,f) sprintf(a,c,d,e,f)
+
 #include "base/plugins.h"
 
 #include "common/archive.h"
@@ -72,20 +77,20 @@
 
 	if (_game.version == 4) {
 		if (room == 0 || room >= 900) {
-			snprintf(buf, sizeof(buf), "%03d.lfl", room);
+			snprintf4(buf, sizeof(buf), "%03d.lfl", room);
 		} else {
-			snprintf(buf, sizeof(buf), "disk%02d.lec", diskNumber);
+			snprintf4(buf, sizeof(buf), "disk%02d.lec", diskNumber);
 		}
 	} else {
 		char id = 0;
 
 		switch (_filenamePattern.genMethod) {
 		case kGenDiskNum:
-			snprintf(buf, sizeof(buf), _filenamePattern.pattern, diskNumber);
+			snprintf4(buf, sizeof(buf), _filenamePattern.pattern, diskNumber);
 			break;
 
 		case kGenRoomNum:
-			snprintf(buf, sizeof(buf), _filenamePattern.pattern, room);
+			snprintf4(buf, sizeof(buf), _filenamePattern.pattern, room);
 			break;
 
 		case kGenHEMac:
@@ -107,15 +112,15 @@
 					else if (_game.id == GID_TREASUREHUNT)
 						strcpy(buf, "Blue'sTreasureHunt.(b)");
 					else
-						snprintf(buf, sizeof(buf), "%s.(b)", _filenamePattern.pattern);
+						snprintf4(buf, sizeof(buf), "%s.(b)", _filenamePattern.pattern);
 					break;
 				case 1:
 					id = 'a';
-					snprintf(buf, sizeof(buf), "%s.(a)", _filenamePattern.pattern);
+					snprintf4(buf, sizeof(buf), "%s.(a)", _filenamePattern.pattern);
 					break;
 				default:
 					id = '0';
-					snprintf(buf, sizeof(buf), "%s.he0", _filenamePattern.pattern);
+					snprintf4(buf, sizeof(buf), "%s.he0", _filenamePattern.pattern);
 				}
 			} else if (_game.heversion >= 70) {
 				id = (room == 0) ? '0' : '1';
@@ -126,16 +131,16 @@
 			if (_filenamePattern.genMethod == kGenHEPC) {
 				// For HE >= 98, we already called snprintf above.
 				if (_game.heversion < 98 || room < 0)
-					snprintf(buf, sizeof(buf), "%s.he%c", _filenamePattern.pattern, id);
+					snprintf5(buf, sizeof(buf), "%s.he%c", _filenamePattern.pattern, id);
 			} else {
 				if (id == '3') { // special case for cursors
 					// For mac they're stored in game binary
 					strncpy(buf, _filenamePattern.pattern, sizeof(buf));
 				} else {
 					if (_filenamePattern.genMethod == kGenHEMac)
-						snprintf(buf, sizeof(buf), "%s (%c)", _filenamePattern.pattern, id);
+						snprintf5(buf, sizeof(buf), "%s (%c)", _filenamePattern.pattern, id);
 					else
-						snprintf(buf, sizeof(buf), "%s %c", _filenamePattern.pattern, id);
+						snprintf5(buf, sizeof(buf), "%s %c", _filenamePattern.pattern, id);
 				}
 			}
 
@@ -159,19 +164,19 @@
 	switch (genMethod) {
 	case kGenDiskNum:
 	case kGenRoomNum:
-		snprintf(buf, sizeof(buf), pattern, 0);
+		snprintf4(buf, sizeof(buf), pattern, 0);
 		break;
 
 	case kGenHEPC:
-		snprintf(buf, sizeof(buf), "%s.he0", pattern);
+		snprintf4(buf, sizeof(buf), "%s.he0", pattern);
 		break;
 
 	case kGenHEMac:
-		snprintf(buf, sizeof(buf), "%s (0)", pattern);
+		snprintf4(buf, sizeof(buf), "%s (0)", pattern);
 		break;
 
 	case kGenHEMacNoParens:
-		snprintf(buf, sizeof(buf), "%s 0", pattern);
+		snprintf4(buf, sizeof(buf), "%s 0", pattern);
 		break;
 
 	case kGenUnchanged:
diff -Naur scummvm-1.2.1_orig/engines/sky/control.cpp scummvm-1.2.1/engines/sky/control.cpp
--- scummvm-1.2.1_orig/engines/sky/control.cpp	2010-12-11 01:37:35.000000000 -0800
+++ scummvm-1.2.1/engines/sky/control.cpp	2011-09-07 11:47:02.000000000 -0700
@@ -1031,7 +1031,7 @@
 	savenames.resize(MAX_SAVE_GAMES);
 
 	Common::InSaveFile *inf;
-	inf = _saveFileMan->openForLoading("SKY-VM.SAV");
+	inf = _saveFileMan->openForLoading(SKY_VM_SAVE_PATH);
 	if (inf != NULL) {
 		char *tmpBuf =  new char[MAX_SAVE_GAMES * MAX_TEXT_LEN];
 		char *tmpPtr = tmpBuf;
@@ -1075,7 +1075,7 @@
 void Control::saveDescriptions(const Common::StringArray &list) {
 	Common::OutSaveFile *outf;
 
-	outf = _saveFileMan->openForSaving("SKY-VM.SAV");
+	outf = _saveFileMan->openForSaving(SKY_VM_SAVE_PATH);
 	bool ioFailed = true;
 	if (outf) {
 		for (uint16 cnt = 0; cnt < MAX_SAVE_GAMES; cnt++) {
diff -Naur scummvm-1.2.1_orig/engines/sky/control.h scummvm-1.2.1/engines/sky/control.h
--- scummvm-1.2.1_orig/engines/sky/control.h	2010-12-11 01:37:35.000000000 -0800
+++ scummvm-1.2.1/engines/sky/control.h	2011-09-07 11:47:02.000000000 -0700
@@ -137,6 +137,8 @@
 #define SAVE_FILE_REVISION 6
 #define OLD_SAVEGAME_TYPE 5
 
+#define SKY_VM_SAVE_PATH "SKY-VM.SAV"
+
 struct AllocedMem {
 	uint16 *mem;
 	AllocedMem *next;
diff -Naur scummvm-1.2.1_orig/engines/sky/detection.cpp scummvm-1.2.1/engines/sky/detection.cpp
--- scummvm-1.2.1_orig/engines/sky/detection.cpp	2010-12-11 01:37:35.000000000 -0800
+++ scummvm-1.2.1/engines/sky/detection.cpp	2011-09-07 11:47:02.000000000 -0700
@@ -37,6 +37,8 @@
 
 #include "engines/metaengine.h"
 
+#include "control.h"
+
 static const PlainGameDescriptor skySetting =
 	{"sky", "Beneath a Steel Sky" };
 
@@ -182,7 +184,7 @@
 	savenames.resize(MAX_SAVE_GAMES+1);
 
 	Common::InSaveFile *inf;
-	inf = saveFileMan->openForLoading("SKY-VM.SAV");
+	inf = saveFileMan->openForLoading(SKY_VM_SAVE_PATH);
 	if (inf != NULL) {
 		char *tmpBuf =  new char[MAX_SAVE_GAMES * MAX_TEXT_LEN];
 		char *tmpPtr = tmpBuf;
@@ -238,7 +240,7 @@
 	Common::StringArray savenames;
 	savenames.resize(MAX_SAVE_GAMES+1);
 	Common::InSaveFile *inf;
-	inf = saveFileMan->openForLoading("SKY-VM.SAV");
+	inf = saveFileMan->openForLoading(SKY_VM_SAVE_PATH);
 	if (inf != NULL) {
 		char *tmpBuf =  new char[MAX_SAVE_GAMES * MAX_TEXT_LEN];
 		char *tmpPtr = tmpBuf;
@@ -257,7 +259,7 @@
 	// Save the updated descriptions
 	Common::OutSaveFile *outf;
 
-	outf = saveFileMan->openForSaving("SKY-VM.SAV");
+	outf = saveFileMan->openForSaving(SKY_VM_SAVE_PATH);
 	bool ioFailed = true;
 	if (outf) {
 		for (uint16 cnt = 0; cnt < MAX_SAVE_GAMES; cnt++) {
diff -Naur scummvm-1.2.1_orig/graphics/scaler/scale2x.cpp scummvm-1.2.1/graphics/scaler/scale2x.cpp
--- scummvm-1.2.1_orig/graphics/scaler/scale2x.cpp	2010-12-11 01:38:07.000000000 -0800
+++ scummvm-1.2.1/graphics/scaler/scale2x.cpp	2011-09-07 12:14:13.000000000 -0700
@@ -211,9 +211,15 @@
 		"0:\n"
 
 		/* set the current, current_pre, current_next registers */
+#if defined(__x86_64__)
+		"movq %%nacl:-8(%%r15,%q1), %%mm0\n"
+		"movq %%nacl:(%%r15,%q1), %%mm7\n"
+		"movq %%nacl:8(%%r15,%q1), %%mm1\n"
+#else
 		"movq -8(%1), %%mm0\n"
 		"movq (%1), %%mm7\n"
 		"movq 8(%1), %%mm1\n"
+#endif
 		"psrlq $56, %%mm0\n"
 		"psllq $56, %%mm1\n"
 		"movq %%mm7, %%mm2\n"
@@ -224,7 +230,11 @@
 		"por %%mm3, %%mm1\n"
 
 		/* current_upper */
+#if defined(__x86_64__)
+		"movq %%nacl:(%%r15,%q0), %%mm6\n"
+#else
 		"movq (%0), %%mm6\n"
+#endif
 
 		/* compute the upper-left pixel for dst on %%mm2 */
 		/* compute the upper-right pixel for dst on %%mm4 */
@@ -234,8 +244,13 @@
 		"movq %%mm1, %%mm5\n"
 		"pcmpeqb %%mm6, %%mm2\n"
 		"pcmpeqb %%mm6, %%mm4\n"
+#if defined(__x86_64__)
+		"pcmpeqb %%nacl:(%%r15,%q2), %%mm3\n"
+		"pcmpeqb %%nacl:(%%r15,%q2), %%mm5\n"
+#else
 		"pcmpeqb (%2), %%mm3\n"
 		"pcmpeqb (%2), %%mm5\n"
+#endif
 		"pandn %%mm2, %%mm3\n"
 		"pandn %%mm4, %%mm5\n"
 		"movq %%mm0, %%mm2\n"
@@ -257,8 +272,13 @@
 		"movq %%mm2, %%mm3\n"
 		"punpcklbw %%mm4, %%mm2\n"
 		"punpckhbw %%mm4, %%mm3\n"
+#if defined(__x86_64__)
+		"movq %%mm2, %%nacl:(%%r15,%q3)\n"
+		"movq %%mm3, %%nacl:8(%%r15,%q3)\n"
+#else
 		"movq %%mm2, (%3)\n"
 		"movq %%mm3, 8(%3)\n"
+#endif
 
 		/* next */
 		"add $8, %0\n"
@@ -289,9 +309,15 @@
 		"0:\n"
 
 		/* set the current, current_pre, current_next registers */
+#if defined(__x86_64__)
+		"movq %%nacl:-8(%%r15,%q1), %%mm0\n"
+		"movq %%nacl:(%%r15,%q1), %%mm7\n"
+		"movq %%nacl:8(%%r15,%q1), %%mm1\n"
+#else
 		"movq -8(%1), %%mm0\n"
 		"movq (%1), %%mm7\n"
 		"movq 8(%1), %%mm1\n"
+#endif
 		"psrlq $48, %%mm0\n"
 		"psllq $48, %%mm1\n"
 		"movq %%mm7, %%mm2\n"
@@ -302,7 +328,11 @@
 		"por %%mm3, %%mm1\n"
 
 		/* current_upper */
+#if defined(__x86_64__)
+		"movq %%nacl:(%%r15,%q0), %%mm6\n"
+#else
 		"movq (%0), %%mm6\n"
+#endif
 
 		/* compute the upper-left pixel for dst on %%mm2 */
 		/* compute the upper-right pixel for dst on %%mm4 */
@@ -312,8 +342,13 @@
 		"movq %%mm1, %%mm5\n"
 		"pcmpeqw %%mm6, %%mm2\n"
 		"pcmpeqw %%mm6, %%mm4\n"
+#if defined(__x86_64__)
+		"pcmpeqw %%nacl:(%%r15,%q2), %%mm3\n"
+		"pcmpeqw %%nacl:(%%r15,%q2), %%mm5\n"
+#else
 		"pcmpeqw (%2), %%mm3\n"
 		"pcmpeqw (%2), %%mm5\n"
+#endif
 		"pandn %%mm2, %%mm3\n"
 		"pandn %%mm4, %%mm5\n"
 		"movq %%mm0, %%mm2\n"
@@ -335,8 +370,13 @@
 		"movq %%mm2, %%mm3\n"
 		"punpcklwd %%mm4, %%mm2\n"
 		"punpckhwd %%mm4, %%mm3\n"
+#if defined(__x86_64__)
+		"movq %%mm2, %%nacl:(%%r15,%q3)\n"
+		"movq %%mm3, %%nacl:8(%%r15,%q3)\n"
+#else
 		"movq %%mm2, (%3)\n"
 		"movq %%mm3, 8(%3)\n"
+#endif
 
 		/* next */
 		"add $8, %0\n"
@@ -367,9 +407,15 @@
 		"0:\n"
 
 		/* set the current, current_pre, current_next registers */
+#if defined(__x86_64__)
+		"movq %%nacl:-8(%%r15,%q1), %%mm0\n"
+		"movq %%nacl:(%%r15,%q1), %%mm7\n"
+		"movq %%nacl:8(%%r15,%q1), %%mm1\n"
+#else
 		"movq -8(%1), %%mm0\n"
 		"movq (%1), %%mm7\n"
 		"movq 8(%1), %%mm1\n"
+#endif
 		"psrlq $32, %%mm0\n"
 		"psllq $32, %%mm1\n"
 		"movq %%mm7, %%mm2\n"
@@ -380,7 +426,11 @@
 		"por %%mm3, %%mm1\n"
 
 		/* current_upper */
+#if defined(__x86_64__)
+		"movq %%nacl:(%%r15,%q0), %%mm6\n"
+#else
 		"movq (%0), %%mm6\n"
+#endif
 
 		/* compute the upper-left pixel for dst on %%mm2 */
 		/* compute the upper-right pixel for dst on %%mm4 */
@@ -390,8 +440,13 @@
 		"movq %%mm1, %%mm5\n"
 		"pcmpeqd %%mm6, %%mm2\n"
 		"pcmpeqd %%mm6, %%mm4\n"
+#if defined(__x86_64__)
+		"pcmpeqd %%nacl:(%%r15,%q2), %%mm3\n"
+		"pcmpeqd %%nacl:(%%r15,%q2), %%mm5\n"
+#else
 		"pcmpeqd (%2), %%mm3\n"
 		"pcmpeqd (%2), %%mm5\n"
+#endif
 		"pandn %%mm2, %%mm3\n"
 		"pandn %%mm4, %%mm5\n"
 		"movq %%mm0, %%mm2\n"
@@ -413,8 +468,13 @@
 		"movq %%mm2, %%mm3\n"
 		"punpckldq %%mm4, %%mm2\n"
 		"punpckhdq %%mm4, %%mm3\n"
+#if defined(__x86_64__)
+		"movq %%mm2, %%nacl:(%%r15,%q3)\n"
+		"movq %%mm3, %%nacl:8(%%r15,%q3)\n"
+#else
 		"movq %%mm2, (%3)\n"
 		"movq %%mm3, 8(%3)\n"
+#endif
 
 		/* next */
 		"add $8, %0\n"
