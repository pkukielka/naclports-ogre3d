diff -r d3beb594de3b ogre_src_v1-8-1/Samples/Browser/include/SampleBrowser_NaCl.h
--- ogre_src_v1-8-1/Samples/Browser/include/SampleBrowser_NaCl.h	Sat Nov 10 05:55:07 2012 +0800
+++ ogre_src_v1-8-1/Samples/Browser/include/SampleBrowser_NaCl.h	Sat Nov 10 13:24:25 2012 +0100
@@ -64,7 +64,7 @@
 #include "ppapi/utility/completion_callback_factory.h"
 #include "ppapi/cpp/input_event.h"
 #include "OgreZip.h"
-#include <GLES2\gl2.h>
+#include <GLES2/gl2.h>
 
 namespace 
 {
diff -r d3beb594de3b ogre_src_v1-8-1/Samples/Browser/src/FileSystemLayerImpl_NaCl.cpp
--- ogre_src_v1-8-1/Samples/Browser/src/FileSystemLayerImpl_NaCl.cpp	Sat Nov 10 05:55:07 2012 +0800
+++ ogre_src_v1-8-1/Samples/Browser/src/FileSystemLayerImpl_NaCl.cpp	Sat Nov 10 13:24:25 2012 +0100
@@ -27,9 +27,9 @@
  */
 #include "FileSystemLayerImpl.h"
 #include <sys/types.h>
-#include <ppapi\cpp\file_system.h>
-#include <ppapi\cpp\file_ref.h>
-#include <ppapi\cpp\file_io.h>
+#include <ppapi/cpp/file_system.h>
+#include <ppapi/cpp/file_ref.h>
+#include <ppapi/cpp/file_io.h>
 
 namespace OgreBites
 {
diff -r d3beb594de3b ogre_src_v1-8-1/XCompile-nacl.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ ogre_src_v1-8-1/XCompile-nacl.txt	Sat Nov 10 13:24:25 2012 +0100
@@ -0,0 +1,25 @@
+# Cross-compiling requires CMake 2.6 or newer. To cross-compile, first modify
+# this file to set the proper settings and paths. Then use it from build/ like:
+# cmake .. -DCMAKE_TOOLCHAIN_FILE=../XCompile.txt \
+#          -DCMAKE_INSTALL_PREFIX=/usr/mingw32/mingw
+# If you already have a toolchain file setup, you may use that instead of this
+# file.
+
+# the name of the target operating system
+SET(CMAKE_SYSTEM_NAME Linux)
+
+# which compilers to use for C and C++
+SET(CMAKE_C_COMPILER ${NACLCC})
+SET(CMAKE_CXX_COMPILER ${NACLCXX})
+set(CMAKE_AR ${NACLAR} CACHE FILEPATH "Archiver")
+SET(_CMAKE_TOOLCHAIN_PREFIX ${NACL_CROSS_PREFIX})
+
+# here is the target environment located
+SET(CMAKE_FIND_ROOT_PATH ${NACL_TOOLCHAIN_ROOT})
+
+# adjust the default behaviour of the FIND_XXX() commands:
+# search headers and libraries in the target environment, search 
+# programs in the host environment
+set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
+set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
+set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE BOTH)
